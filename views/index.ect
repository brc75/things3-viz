<!DOCTYPE html>
<html>

<head>
    <title>Igor's Tasks</title>

    <meta charset="utf-8">

    <!-- TODO: Mobile-friendly meta tags -->
    <!-- TODO: Favicons -->

    <link rel="stylesheet" href="/style.css">

    <script src="https://d3js.org/d3.v4.min.js"></script>
</head>

<body>
    <div class='workspace'>
        <div class='sidebar'></div>
        <div class='content'></div>
    </div>

    <div class='update-date'></div>

    <script>
        d3.json('/data.json', function(data) {
            d3.select('.update-date')
                .text(data.updateDate)

            const area = d3.select('.sidebar')
                .selectAll('.area')
                .data(data.areas)
                .enter()
                .append('div')
                .classed('area', true)

            var hasRecent = function(items) {
                return items.filter(function(item) {
                    return item.isRecent
                }).length > 0
            }

            area.append('div')
                .classed('area__title', true)
                .classed('recent', function(area) {
                    return hasRecent(area.tasks)
                })
                .text(function(area) { return area.title })
                .on('click', function(area) {
                    selectAreaOrProject(area, d3.select(this))
                })

            area.each(function(area) {
                d3.select(this)
                    .selectAll('.project')
                    .data(area.projects)
                    .enter()
                    .append('div')
                    .classed('project', true)
                    .classed('recent', function(project) {
                        return hasRecent(project.tasks)
                            || project.sections.reduce(function(flag, section) {
                                return flag || hasRecent(section.tasks)
                            }, false)
                    })
                    .text(function(project) { return project.title })
                    .on('click', function(project) {
                        selectAreaOrProject(project, d3.select(this))
                    })
            })

            var selectAreaOrProject = function(data, element) {
                d3.selectAll('.sidebar .selected').classed('selected', false)
                element.classed('selected', true)

                const content = d3.select('.content')
                    .html('')

                if (data.tasks !== undefined) {
                    showTasks(data.tasks, content)
                }

                if (data.sections !== undefined) {
                    data.sections.forEach(function(data) {
                        var section = content.append('div')
                            .classed('section', true)
                            
                        section.append('div')
                            .classed('section__title', true)
                            .text(data.title)

                        showTasks(data.tasks, section)
                    })
                }
            }

            var showTasks = function(data, element) {
                element.append('div')
                    .classed('tasks', true)
                    .selectAll('.task')
                    .data(data)
                    .enter()
                    .append('div')
                    .classed('task', true)
                    .classed('cancelled', function(task) { return task.isCancelled })
                    .classed('completed', function(task) { return task.isCompleted })
                    .classed('recent', function(task) { return task.isRecent })
                    .text(function(task) { return task.title })
            }
        })
    </script>

    <!-- Yandex.Metrika counter --> <script type="text/javascript" > (function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter45901455 = new Ya.Metrika({ id:45901455, clickmap:true, trackLinks:true, accurateTrackBounce:true, webvisor:true, ut:"noindex" }); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = "https://mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks"); </script> <noscript><div><img src="https://mc.yandex.ru/watch/45901455?ut=noindex" style="position:absolute; left:-9999px;" alt="" /></div></noscript> <!-- /Yandex.Metrika counter -->
</body>

</html>